{"version":3,"sources":["../../example/index.js"],"names":["feathers","require","hooks","memory","fetch","app","configure","paginate","default","max","use","addresses","service","create","id","name","users","articles","owner","after","all","ownerUser","$fetch","get","userAddresses","find","$in","then","items","console","log"],"mappings":";;AAAA,MAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,MAAMC,QAAQD,QAAQ,gBAAR,CAAd;AACA,MAAME,SAASF,QAAQ,iBAAR,CAAf;AACA,MAAMG,QAAQH,QAAQ,SAAR,CAAd;;AAEA,MAAMI,MAAML,WAAWM,SAAX,CAAqBJ,OAArB,CAAZ;;AAEA,MAAMK,WAAW;AACfC,WAAS,EADM;AAEfC,OAAK;AAFU,CAAjB;;AAKA;AACAJ,IAAIK,GAAJ,CAAQ,WAAR,EAAqBP,OAAO,EAAEI,QAAF,EAAP,CAArB;AACA,MAAMI,YAAYN,IAAIO,OAAJ,CAAY,WAAZ,CAAlB;;AAEAD,UAAUE,MAAV,CAAiB;AACfC,MAAI,WADW;AAEfC,QAAM;AAFS,CAAjB;;AAKAJ,UAAUE,MAAV,CAAiB;AACfC,MAAI,WADW;AAEfC,QAAM;AAFS,CAAjB;;AAKA;AACAV,IAAIK,GAAJ,CAAQ,OAAR,EAAiBP,OAAO,EAAEI,QAAF,EAAP,CAAjB;AACA,MAAMS,QAAQX,IAAIO,OAAJ,CAAY,OAAZ,CAAd;;AAEAI,MAAMH,MAAN,CAAa;AACXC,MAAI,QADO;AAEXC,QAAM,UAFK;AAGXJ,aAAW,CAAC,WAAD,EAAc,WAAd;AAHA,CAAb;;AAMA;AACAN,IAAIK,GAAJ,CAAQ,UAAR,EAAoBP,OAAO,EAAEI,QAAF,EAAP,CAApB;AACA,MAAMU,WAAWZ,IAAIO,OAAJ,CAAY,UAAZ,CAAjB;;AAEAK,SAASJ,MAAT,CAAgB;AACdC,MAAI,WADU;AAEdC,QAAM,WAFQ;AAGdG,SAAO;AAHO,CAAhB;;AAMA;AACAD,SAASf,KAAT,CAAe;AACbiB,SAAO;AACLC,SAAK,CACHhB,MAAM;AACJiB,iBAAW;AACTC,gBAAQ,gBAAUjB,GAAV,EAAe;AACrB,iBAAOA,IAAIO,OAAJ,CAAY,OAAZ,EAAqBW,GAArB,CAAyB,KAAKL,KAA9B,CAAP;AACD,SAHQ;AAITM,uBAAe;AACbF,kBAAQ,gBAAUjB,GAAV,EAAe;AACrB,mBAAOA,IAAIO,OAAJ,CAAY,WAAZ,EAAyBa,IAAzB,CAA8B,EAAEX,IAAI,EAAEY,KAAK,KAAKf,SAAZ,EAAN,EAA9B,CAAP;AACD;AAHY;AAJN;AADP,KAAN,CADG;AADA;AADM,CAAf;;AAmBAM,SAASQ,IAAT,GAAgBE,IAAhB,CAAqBC,SAAS;AAC5BC,UAAQC,GAAR,CAAYF,KAAZ;AACD,CAFD","file":"index.js","sourcesContent":["const feathers = require('feathers')\nconst hooks = require('feathers-hooks')\nconst memory = require('feathers-memory')\nconst fetch = require('../dist')\n\nconst app = feathers().configure(hooks())\n\nconst paginate = {\n  default: 10,\n  max: 20\n}\n\n// addresses\napp.use('addresses', memory({ paginate }))\nconst addresses = app.service('addresses')\n\naddresses.create({\n  id: 'address-1',\n  name: 'Address One'\n})\n\naddresses.create({\n  id: 'address-2',\n  name: 'Address Two'\n})\n\n// users\napp.use('users', memory({ paginate }))\nconst users = app.service('users')\n\nusers.create({\n  id: 'user-1',\n  name: 'User One',\n  addresses: ['address-1', 'address-2']\n})\n\n// articles\napp.use('articles', memory({ paginate }))\nconst articles = app.service('articles')\n\narticles.create({\n  id: 'article-1',\n  name: 'Article 1',\n  owner: 'user-1'\n})\n\n// hooks\narticles.hooks({\n  after: {\n    all: [\n      fetch({\n        ownerUser: {\n          $fetch: function (app) {\n            return app.service('users').get(this.owner)\n          },\n          userAddresses: {\n            $fetch: function (app) {\n              return app.service('addresses').find({ id: { $in: this.addresses } })\n            }\n          }\n        }\n      })\n    ]\n  }\n})\n\narticles.find().then(items => {\n  console.log(items)\n})\n\n"]}